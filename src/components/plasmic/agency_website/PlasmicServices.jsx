// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 73xdGP9Q5fZ1cPjXq85afw
// Component: -LAZsJMV8ivR
import * as React from "react";
import {
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  hasVariant
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import Header from "../../Header"; // plasmic-import: jbktukOjJD-L/component
import ServiceWhite from "../../ServiceWhite"; // plasmic-import: M3sFsVcPKJLa/component
import ServiceDark from "../../ServiceDark"; // plasmic-import: r83EKkQQAzf_/component
import HomeFooterTop from "../../HomeFooterTop"; // plasmic-import: qO1rwRcK1KDF/component
import FooterMain from "../../FooterMain"; // plasmic-import: 9-zI42kgeb0s/component
import { useScreenVariants as useScreenVariantshFppFalB91Q } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: H-fppFalB91Q/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic.module.css"; // plasmic-import: 73xdGP9Q5fZ1cPjXq85afw/projectcss
import sty from "./PlasmicServices.module.css"; // plasmic-import: -LAZsJMV8ivR/css

createPlasmicElementProxy;

export const PlasmicServices__VariantProps = new Array();

export const PlasmicServices__ArgProps = new Array();

const $$ = {};

function PlasmicServices__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantshFppFalB91Q()
  });
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <div
            data-plasmic-name={"aboutUsBanner"}
            data-plasmic-override={overrides.aboutUsBanner}
            className={classNames(projectcss.all, sty.aboutUsBanner)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"foreground2"}
              data-plasmic-override={overrides.foreground2}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground2)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__g8A4V)}
              >
                <h1
                  data-plasmic-name={"h1"}
                  data-plasmic-override={overrides.h1}
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1
                  )}
                >
                  {"Services"}
                </h1>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ppfWz
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobile")
                    ? "Lorem Ipsum is simply dummy text of the printing and typesetting indstandard dummy text ever since the 1500s."
                    : "Lorem Ipsum is simply dummy text of the printing and typesetting indstandard dummy text ever since the 1500s."}
                </div>
              </Stack__>
            </Stack__>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__dFqLs)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__kyErr)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__s0TN)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__xzHlh)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__dwI4L
                    )}
                  >
                    {"Service type"}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vK2Bz
                    )}
                  >
                    {
                      "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s."
                    }
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__kcIvN)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"serviceRow"}
                    data-plasmic-override={overrides.serviceRow}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.serviceRow)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__qxicl)}
                    >
                      <ServiceWhite
                        className={classNames(
                          "__wab_instance",
                          sty.serviceWhite___0Dq0W
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__dNg2X
                          )}
                        >
                          {"Service name"}
                        </h3>
                      </ServiceWhite>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__eeYl)}
                    >
                      <ServiceWhite
                        className={classNames(
                          "__wab_instance",
                          sty.serviceWhite__mlXi4
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__eTBor
                          )}
                        >
                          {"Service name"}
                        </h3>
                      </ServiceWhite>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__xmvy)}
                    >
                      <ServiceWhite
                        className={classNames(
                          "__wab_instance",
                          sty.serviceWhite__hnDpy
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3___1FKe
                          )}
                        >
                          {"Service name"}
                        </h3>
                      </ServiceWhite>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column___4Imxr)}
                    >
                      <ServiceWhite
                        className={classNames(
                          "__wab_instance",
                          sty.serviceWhite__t4YhV
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__lkqDq
                          )}
                        >
                          {"Service name"}
                        </h3>
                      </ServiceWhite>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__g8NAq)}
                    >
                      <ServiceWhite
                        className={classNames(
                          "__wab_instance",
                          sty.serviceWhite__nt2Po
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__ye27V
                          )}
                        >
                          {"Service name"}
                        </h3>
                      </ServiceWhite>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__btvlI)}
                    >
                      <ServiceWhite
                        className={classNames(
                          "__wab_instance",
                          sty.serviceWhite__hvfBp
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__ztMbF
                          )}
                        >
                          {"Service name"}
                        </h3>
                      </ServiceWhite>
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
            </Stack__>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__fkwVi)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__jPzEv)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__pAdE)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__izkI8)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__yfmon
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "Service category"
                      : "Service type"}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pxKju
                    )}
                  >
                    {
                      "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy"
                    }
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___9LjFm)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"serviceRow2"}
                    data-plasmic-override={overrides.serviceRow2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.serviceRow2)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__xuMjt)}
                    >
                      <ServiceDark
                        className={classNames(
                          "__wab_instance",
                          sty.serviceDark__ydaNu
                        )}
                        slot={
                          "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s."
                        }
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column___6YI)}
                    >
                      <ServiceDark
                        className={classNames(
                          "__wab_instance",
                          sty.serviceDark__q4Mwu
                        )}
                        slot={
                          "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s."
                        }
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___5UHbU
                          )}
                        >
                          {"Service name 3"}
                        </div>
                      </ServiceDark>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__tczHz)}
                    >
                      <ServiceDark
                        className={classNames(
                          "__wab_instance",
                          sty.serviceDark___2Wco2
                        )}
                        slot={
                          "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s."
                        }
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__lmix)}
                    >
                      <ServiceDark
                        className={classNames(
                          "__wab_instance",
                          sty.serviceDark__jthyB
                        )}
                        slot={
                          "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s."
                        }
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__v8Eo7)}
                    >
                      <ServiceDark
                        className={classNames(
                          "__wab_instance",
                          sty.serviceDark__gc4Ct
                        )}
                        slot={
                          "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s."
                        }
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__hQuOb)}
                    >
                      <ServiceDark
                        className={classNames(
                          "__wab_instance",
                          sty.serviceDark___7FvLd
                        )}
                        slot={
                          "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s."
                        }
                      />
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
            </Stack__>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__jdfI)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__tJii)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__slGQ)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__w9JcL)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__lyYhj
                    )}
                  >
                    {"Service type"}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___8Y6Jj
                    )}
                  >
                    {
                      "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s."
                    }
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__k5Jnp)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"serviceRow3"}
                    data-plasmic-override={overrides.serviceRow3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.serviceRow3)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__qU1UK)}
                    >
                      <ServiceWhite
                        className={classNames(
                          "__wab_instance",
                          sty.serviceWhite__yvAgt
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__aTdkZ
                          )}
                        >
                          {"Service name"}
                        </h3>
                      </ServiceWhite>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__zL9Xa)}
                    >
                      <ServiceWhite
                        className={classNames(
                          "__wab_instance",
                          sty.serviceWhite__bzq5X
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__lxV3N
                          )}
                        >
                          {"Services 2"}
                        </h3>
                      </ServiceWhite>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column___0IaCy)}
                    >
                      <ServiceWhite
                        className={classNames(
                          "__wab_instance",
                          sty.serviceWhite__qmq7D
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3___3JzXr
                          )}
                        >
                          {"Service name"}
                        </h3>
                      </ServiceWhite>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__qjoIt)}
                    >
                      <ServiceWhite
                        className={classNames(
                          "__wab_instance",
                          sty.serviceWhite__wyWyj
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3___6VUhy
                          )}
                        >
                          {"Service name"}
                        </h3>
                      </ServiceWhite>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column___2EXk)}
                    >
                      <ServiceWhite
                        className={classNames(
                          "__wab_instance",
                          sty.serviceWhite__yq5Ik
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__cebS
                          )}
                        >
                          {"Service name"}
                        </h3>
                      </ServiceWhite>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__fSsky)}
                    >
                      <ServiceWhite
                        className={classNames(
                          "__wab_instance",
                          sty.serviceWhite__tt7Jo
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__aQejd
                          )}
                        >
                          {"Service name"}
                        </h3>
                      </ServiceWhite>
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
            </Stack__>
          </div>
          <div
            data-plasmic-name={"footerTopSection"}
            data-plasmic-override={overrides.footerTopSection}
            className={classNames(projectcss.all, sty.footerTopSection)}
          >
            <HomeFooterTop
              data-plasmic-name={"homeFooterTop"}
              data-plasmic-override={overrides.homeFooterTop}
              className={classNames("__wab_instance", sty.homeFooterTop)}
            />
          </div>
          <FooterMain
            data-plasmic-name={"footerMain"}
            data-plasmic-override={overrides.footerMain}
            className={classNames("__wab_instance", sty.footerMain)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "aboutUsBanner",
    "foreground2",
    "h1",
    "serviceRow",
    "serviceRow2",
    "serviceRow3",
    "footerTopSection",
    "homeFooterTop",
    "footerMain"
  ],

  header: ["header"],
  aboutUsBanner: ["aboutUsBanner", "foreground2", "h1"],
  foreground2: ["foreground2", "h1"],
  h1: ["h1"],
  serviceRow: ["serviceRow"],
  serviceRow2: ["serviceRow2"],
  serviceRow3: ["serviceRow3"],
  footerTopSection: ["footerTopSection", "homeFooterTop"],
  homeFooterTop: ["homeFooterTop"],
  footerMain: ["footerMain"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicServices__ArgProps,
          internalVariantPropNames: PlasmicServices__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicServices__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicServices";
  } else {
    func.displayName = `PlasmicServices.${nodeName}`;
  }
  return func;
}

export const PlasmicServices = Object.assign(
  // Top-level PlasmicServices renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    aboutUsBanner: makeNodeComponent("aboutUsBanner"),
    foreground2: makeNodeComponent("foreground2"),
    h1: makeNodeComponent("h1"),
    serviceRow: makeNodeComponent("serviceRow"),
    serviceRow2: makeNodeComponent("serviceRow2"),
    serviceRow3: makeNodeComponent("serviceRow3"),
    footerTopSection: makeNodeComponent("footerTopSection"),
    homeFooterTop: makeNodeComponent("homeFooterTop"),
    footerMain: makeNodeComponent("footerMain"),
    // Metadata about props expected for PlasmicServices
    internalVariantProps: PlasmicServices__VariantProps,
    internalArgProps: PlasmicServices__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "Service",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicServices;
/* prettier-ignore-end */
